---
layout: post
published: true
permalink: /gui-kit
id: tag:www.patater.com,2007-11-13:/gui-kit
title: Patater GUI Kit
author: Jaeden Amero
date: 2007-11-13 19:29:16
updated: 2010-12-19 03:36:44
sitemappriority: 0.6
tags: project nds nintendo nintendo-ds gui
description: A simple GUI kit for streamlining the creation of menus and making simple games
graphic: /images/gui-kit-orchid.png
graphicalt: GUI Kit
thumb: /images/thumb-guikit.png
language: en
---
<h2>About</h2>
<p>
The Patater GUI Kit is an open source (released under MIT license) GUI
kit for the Nintendo DS. It is a basic framework for building a GUI. It
is designed to help developers streamline the creation of basic menus
and other similar components. It also includes a separate library with
a few useful functions, such as <code>vblanksleep</code>,
<code>waitfortouch</code>, and <code>dmafill</code>. It was written in
C++.
</p>
<!--break-->

<h2>Applications</h2>
<p>
A touch-based adventure game is currently in development, by Patater,
which utilizes this GUI Kit. Upon release of the game, and after enough
people have beaten the game (to avoid spoiling), the source will be
released showing how to use the GUI Kit in a useful manner.
</p>

<p>
The adventure game is undergoing code cleanup, though the story and
graphics are still all complete.
</p>

<p>
More than just touch-based adventure games and menus will be possible,
however.  For example, a dating simulator which presents multiple
choice responses to the environment would be extremely easy to develop
with the Patater GUI Kit.
</p>

<h2>Basic Usage</h2>
<p>
Basically, you make some goodies in your <code>arm9_main.cpp</code>,
like a <code>UIManager</code> and a <code>Screen</code> object or two.
You then simply put the <code>HandleInput</code> function into your
program loop and events will be passed to your <code>UIManager</code>.
You then draw whatever you'd like to the screen using the
<code>Screen</code> class or your own subclass, giving information
about whatever <code>HotSpots</code>, <code>Buttons</code>, or other
custom controls you've added to the <code>UIManager</code>. The
<code>UIManager</code> will then send events to your controls which can
do whatever you've programmed their various event handlers to do.
</p>

<p>
Please <a href="/contact">contact me</a> if you have any suggestions or
concerns.
</p>

<h2>Documentation</h2>
<h5>GUI Kit Class Hierarchy</h5>
<p>
<img src="/images/gui-kit-hierarchy.png" alt="GUI Kit Hierarchy"/>
</p>

<div>
<h2>Download</h2>
<a href="http://static.patater.com/projects/guikit-20070919.tgz">Download the GUI Kit</a>
</div>
