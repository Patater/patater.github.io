---
layout: post
published: true
id: tag:www.patater.com,2005-07-22:/nes-asm-tutorials/day-11
permalink: /nes-asm-tutorials/day-11
title: Day 11 - The JSR Instruction
author: Mike Huber
date: 2005-07-22 00:10:00
updated: 2010-12-19 03:36:44
sitemappriority: 0.5
categories: nes-asm-tutorials
tags: nes-asm-tutorials nes assembly tutorial
language: en
---
<h2>JSR?</h2>
<p>JSR stands for Jump to SubRoutine and is used to, well... jump to a subroutine.</p>

<h3>How do we use it?</h3>

<p>We use it by giving it the name of the label that we want to jump to.
Example:</p>
<code class="block">
    jsr OurSub
    ; blah, some code

OurSub:
    ; blah, some more code
    ; return to instruction <em>after</em> the JSR.
</code>


<h2>Return? How?</h2>

<p>With the RTS (ReTurn from Subroutine) instruction of course! So the full
version of the above stuff is:</p>
<code class="block">
    jsr OurSub
    ; blah, some code

OurSub:
    ; blah, some code
    rts  ; returns and resumes execution at the first "blah, some code".
</code>

<h2>Something more</h2>
<p>One thing to remember though, if you just want to separate your code out.
then what is described above should be enough. If you want to jump to a subroutine based
on a comparison, you would have to do something like the following:</p>
<code class="block">
    cmp #5  ; compare A with 5
    bne DONTcall ; if A isn't 5 we branch over the subroutine call.
    jsr OurSub
DONTcall:


    ;somewhere... possibly far away:
OurSub:

    ;blah, code.
    rts ; return
</code>


<h3>This Day In Review</h3>

<p>I hope you get that, if you don't.. well.. I just won't think like that. ;)
Seriously though, if you ever need help with something from these tutorials or
find an error, don't hesitate to <a
href="mailto:vbnetprogramer@hotmail.com">tell me</a>.</p>

<p>
    Happy coding!,<br/>
        -Mike H a.k.a GbaGuy
</p>

<div class="series-navigation">
<a href="/nes-asm-tutorials">Intro</a> - <a href="/nes-asm-tutorials/day-12">Day 12</a>
</div>
